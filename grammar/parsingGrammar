Gramática Sintática - Pascal


program::= 'program' ID ';' COMD* CommandBlock '.'

COMD::= (DecFunc
	    |DecVar
	    |DecProc) ';' 

DecFunc::= 'function' ID '(' LP? ')' ':' Type ';'
		   CommandBlock 

DecProc::= 'procedure' ID '(' LP? ')' ';'
		   CommandBlock

DecVar::= 'var' LP 

LP::= ID (',' ID)* ':' Type (';' LP)*

CommandBlock::= 'begin' CommandBody* 'end'

CommandBody::= (DecVar
			   |ID (:= Expression | '(' LA ')' )
			   |IfCommand
			   |WhileCommand
			   |IDeviation
			   |WriteCommand) ';'

IfCommand::= 'if' Expression 'then' CommandBlock ('else' CommandBlock )?

WhileCommand::= 'while' Expression 'do' CommandBlock 

IDeviation::= 'break' 
			  |'continue' 

WriteCommand::= 'write' '(' Expression ')'	

LA::= Expression ( ',' Expression)*

Expression::= ArithmeticEx (RelationalOp ArithmeticEx)?

ArithmeticEx::= Term (SimpleOp Term)*

Term::= Factor (ComplexOp Factor)*

Factor::= ID ( '(' LA ')' )?
		  |NUM
		  |'(' ArithmeticEx ')'
		  |BOOL








